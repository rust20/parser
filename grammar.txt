program: function*
function: ident "(" paramlist? ")" block
paramlist: ident ("," ident)*
block: "{" statement* "}"
statement: ("auto" | "register") ident "=" expr ";"
         | "return" expr? ";"
         | block
         | "while" "(" expr ")" statement
         | "if" "(" expr ")" statement ("else" statement)?
         | expr ";"


expr:       assign
assign:     or (= or)*
or:         and (|| and)*
and:        bit_or (&& bit_or)*

bit_or:     bit_xor (| bit_xor)*
bit_xor:    bit_and (^ bit_and)*
bit_and:    equality (& equality)*

equality:   ineq ((== | !=) ineq)*
ineq:       shift ((< | > | <= | >=) shift)*

shift:      term ((<< | >>) term)*
term:       factor ((+ | -) factor)*
factor:     unary ((* | / | %) unary)*

unary:      ("-" | | "!" | "~" | "&")* e_subscript
e_subscript: primary ("[" expr sizespec? "]")*

primary: "(" expr ")"
    | ident "(" arglist? ")"
    | ident
    | number


arglist: expr ("," expr)*
sizespec: "@" number
ident: r"[a-zA-Z_][a-zA-Z0-9_]*"
number: r"[0-9]+"

